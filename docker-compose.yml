version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: iip_postgres
    environment:
      - POSTGRES_DB=iip_db
      - POSTGRES_USER=iip_user
      - POSTGRES_PASSWORD=iip_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - iip_network

  # Redis para cache e Celery
  redis:
    image: redis:7-alpine
    container_name: iip_redis
    ports:
      - "6379:6379"
    networks:
      - iip_network

  # Django Web Application
  web:
    build: .
    container_name: iip_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    environment:
      - DATABASE_URL=postgresql://iip_user:iip_password@db:5432/iip_db
      - REDIS_URL=redis://redis:6379/0
      - DEBUG=True
      - SECRET_KEY=django-insecure-&48=4(7eg+!tp%wa_bss&dth!ik=7gwzs+xalf0ktz=6)3&^l3
    networks:
      - iip_network

  # Celery Worker (para processamento ass√≠ncrono) - Comentado temporariamente
  # celery:
  #   build: .
  #   container_name: iip_celery
  #   command: celery -A IIP worker --loglevel=info
  #   volumes:
  #     - .:/app
  #   depends_on:
  #     - db
  #     - redis
  #   environment:
  #     - DATABASE_URL=postgresql://iip_user:iip_password@db:5432/iip_db
  #     - REDIS_URL=redis://redis:6379/0
  #     - DEBUG=True
  #     - SECRET_KEY=django-insecure-&48=4(7eg+!tp%wa_bss&dth!ik=7gwzs+xalf0ktz=6)3&^l3
  #   networks:
  #     - iip_network

volumes:
  postgres_data:

networks:
  iip_network:
    driver: bridge