# Generated by Django 5.2.4 on 2025-08-13 03:36

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Partido',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sigla', models.CharField(max_length=20, unique=True)),
                ('nome', models.CharField(max_length=150)),
            ],
            options={
                'verbose_name': 'Partido',
                'verbose_name_plural': 'Partidos',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(help_text='CPF do usuário (apenas números)', max_length=11, unique=True, validators=[core.models.validate_cpf])),
                ('nome_completo', models.CharField(blank=True, max_length=255)),
                ('telefone', models.CharField(blank=True, max_length=20)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('poder', models.CharField(choices=[('EXECUTIVO', 'Executivo'), ('LEGISLATIVO', 'Legislativo'), ('JUDICIARIO', 'Judiciário')], max_length=20)),
                ('nivel', models.CharField(choices=[('MUNICIPAL', 'Municipal'), ('ESTADUAL', 'Estadual'), ('FEDERAL', 'Federal')], max_length=20)),
            ],
            options={
                'verbose_name': 'Cargo',
                'verbose_name_plural': 'Cargos',
                'unique_together': {('nome', 'poder', 'nivel')},
            },
        ),
        migrations.CreateModel(
            name='Politico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=150)),
                ('slug', models.SlugField(max_length=180, unique=True)),
                ('foto_url', models.URLField(blank=True, null=True)),
                ('esfera', models.CharField(blank=True, choices=[('MUNICIPAL', 'Municipal'), ('ESTADUAL', 'Estadual'), ('FEDERAL', 'Federal')], max_length=20)),
                ('uf', models.CharField(blank=True, max_length=2)),
                ('municipio', models.CharField(blank=True, max_length=120)),
                ('ativo', models.BooleanField(default=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('cargo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='politicos_atual', to='core.cargo')),
                ('partido', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='politicos', to='core.partido')),
            ],
            options={
                'verbose_name': 'Político',
                'verbose_name_plural': 'Políticos',
            },
        ),
        migrations.CreateModel(
            name='Nota',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('periodo_ref', models.DateField(help_text='Data de referência (ex.: primeiro dia do mês)')),
                ('nota_dados_oficiais', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('sentimento_noticias', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('nota_usuario', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('nota_ia', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('nota_final', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('politico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas', to='core.politico')),
            ],
            options={
                'verbose_name': 'Nota',
                'verbose_name_plural': 'Notas',
                'ordering': ['-periodo_ref'],
            },
        ),
        migrations.CreateModel(
            name='Mandato',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inicio', models.DateField()),
                ('fim', models.DateField(blank=True, null=True)),
                ('cargo', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='mandatos', to='core.cargo')),
                ('politico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mandatos', to='core.politico')),
            ],
            options={
                'verbose_name': 'Mandato',
                'verbose_name_plural': 'Mandatos',
                'ordering': ['-inicio'],
            },
        ),
        migrations.CreateModel(
            name='AvaliacaoUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)])),
                ('comentario', models.TextField(blank=True)),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('politico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avaliacoes', to='core.politico')),
            ],
            options={
                'verbose_name': 'Avaliação de Usuário',
                'verbose_name_plural': 'Avaliações de Usuários',
                'ordering': ['-criado_em'],
            },
        ),
        migrations.AddIndex(
            model_name='politico',
            index=models.Index(fields=['slug'], name='core_politi_slug_4b87e3_idx'),
        ),
        migrations.AddIndex(
            model_name='politico',
            index=models.Index(fields=['nome'], name='core_politi_nome_f11de3_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='nota',
            unique_together={('politico', 'periodo_ref')},
        ),
    ]
